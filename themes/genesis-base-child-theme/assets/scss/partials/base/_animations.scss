// Animations variables
$aos-distance: 50px !default;

/**
 * Fade animations:
 * fade
 * fade-up, fade-down, fade-left, fade-right
 * fade-up-right, fade-up-left, fade-down-right, fade-down-left
 */

.animation-fade-up,
.animation-fade-left,
.animation-fade-right,
.animation-fade-up-right,
.animation-fade-up-left,
.animation-fade-down,
.animation-fade-down-right,
.animation-fade-down-left,
.animation-fade-in {
     transition-duration: 1000ms;
     opacity: 0;
     transition-property: opacity, transform;

     &.inviewport {
          opacity: 1;
          transform: translate3d(0, 0, 0);
     }

     &.animation-delay-1 {
          transition-delay: 0.25s;
     }

     &.animation-delay-2 {
          transition-delay: 0.5s;
     }

     &.animation-delay-3 {
          transition-delay: 0.75s;
     }

     &.animation-delay-4 {
          transition-delay: 1s;
     }

     &.animation-delay-5 {
          transition-delay: 1.25s;
     }

     &.animation-duration-fast {
          transition-duration: 500ms;
     }

     &.animation-duration-slow {
          transition-duration: 1500ms;
     }
}

.animation-fade-up,
.animation-fade-left,
.animation-fade-right,
.animation-fade-up-right,
.animation-fade-up-left,
.animation-fade-down,
.animation-fade-down-right,
.animation-fade-down-left {
     transition-timing-function: cubic-bezier(0.25,0.46,0.45,0.94);
}

.animation-fade-in {
     transition-timing-function: ease-in;
}

.animation-fade-up {
     transform: translate3d(0, $aos-distance, 0);
}

.animation-fade-down {
     transform: translate3d(0, -$aos-distance, 0);
}

.animation-fade-right {
     transform: translate3d(-$aos-distance, 0, 0);
}

.animation-fade-left {
     transform: translate3d($aos-distance, 0, 0);
}

.animation-fade-up-right {
     transform: translate3d(-$aos-distance, $aos-distance, 0);
}

.animation-fade-up-left {
     transform: translate3d($aos-distance, $aos-distance, 0);
}

.animation-fade-down-right {
     transform: translate3d(-$aos-distance, -$aos-distance, 0);
}

.animation-fade-down-left {
     transform: translate3d($aos-distance, -$aos-distance, 0);
}
